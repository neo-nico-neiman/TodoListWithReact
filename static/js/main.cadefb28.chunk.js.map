{"version":3,"sources":["App.js","index.js"],"names":["Todo","props","className","style","marginLeft","paddingLeft","type","checked","todo","onChange","toggleChecked","onClick","handleDelete","text","id","App","useState","todos","setTodos","length","filter","prompt","addTodo","map","index","key","toogleChecked","ReactDOM","render","document","getElementById"],"mappings":"mMAEMA,EAAO,SAAAC,GAAK,OAChB,wBAAIC,UAAU,WACZ,2BAAOC,MAAO,CAAEC,WAAW,EAAGC,YAAa,GAAMC,KAAK,WAAWC,QAAUN,EAAMO,KAAKD,QAAUE,SAAWR,EAAMS,gBACjH,4BAAQR,UAAU,UAAUS,QAAUV,EAAMW,cAA5C,aACA,0BAAMV,UAAU,WAAaD,EAAMO,KAAKK,QAIxCC,EAAK,EA8CMC,EA5CH,WAAO,IAAD,EACYC,mBAAU,IADtB,mBACRC,EADQ,KACDC,EADC,KAuBhB,OACE,yBAAKhB,UAAU,OACb,yBAAKA,UAAU,WAAf,6BAAsDe,EAAME,QAC5D,yBAAKjB,UAAU,WAAf,2BAAoDe,EAAMG,QAAQ,SAAAZ,GAAI,OAAqB,IAAjBA,EAAKD,WAAoBY,QACnG,4BAAQR,QAAU,kBAxBtB,WACE,IAAME,EAAOQ,OAAQ,2BACrBH,EAAS,GAAD,mBAAOD,GAAP,CAAc,CAAEJ,KAAMA,EAAMC,GAAIA,IAAMP,SAAS,MAsB7Be,IAAYpB,UAAU,WAA9C,aAGA,wBAAIA,UAAU,WACVe,EAAMM,KAAK,SAAEf,EAAMgB,GAAR,OACX,kBAAC,EAAD,CACEC,IAAMD,EACNhB,KAAOA,EACPI,aAAe,kBA3BzB,SAAuBE,GACrBI,EAAUD,EAAMG,QAAQ,SAAAZ,GAAI,OAAIA,EAAKM,KAAOA,MA0BfF,CAAcJ,EAAKM,KACxCJ,cAAgB,kBAxB1B,SAAwBI,GACtBI,EAAUD,EAAMM,KAAK,SAAAf,GACnB,OAAKA,EAAKM,KAAOA,EAAYN,EACtB,CACLM,GAAIA,EACJD,KAAML,EAAKK,KACXN,SAAUC,EAAKD,aAkBWmB,CAAelB,EAAKM,aC3CtDa,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.cadefb28.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Todo = props => (\n  <li className=\"marginY\" >\n    <input style={{ marginLeft:0, paddingLeft: 0, }} type=\"checkbox\" checked={ props.todo.checked } onChange={ props.toggleChecked }/>\n    <button className=\"marginX\" onClick={ props.handleDelete }>Delete me</button>\n    <span className=\"marginX\" >{ props.todo.text }</span>\n  </li>\n);\n\nlet id = 0;\n\nconst App = () => {\n  const [ todos, setTodos ] = useState( [] );\n  \n  function addTodo() {\n    const text = prompt( 'Add a Todo to the list!');\n    setTodos( [ ...todos, { text: text, id: id++, checked: false, } ] );\n  };\n\n  function handleDelete( id ) {\n    setTodos( todos.filter( todo => todo.id !== id ) );\n  };\n\n  function toogleChecked( id ) {\n    setTodos( todos.map( todo => {\n      if ( todo.id !== id ) return todo\n      return {\n        id: id,\n        text: todo.text,\n        checked: !todo.checked,\n      }\n    } ) );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"marginY\" >Total Todos on your list: { todos.length }</div>\n      <div className=\"marginY\" >Total uncomplete Todos: { todos.filter( todo => todo.checked === false ).length }</div>\n      <button onClick={ () => addTodo() } className=\"marginY\" >\n        Add todos\n      </button>\n      <ul className=\"marginY\" >\n        { todos.map( ( todo, index ) => (\n          <Todo\n            key={ index }\n            todo={ todo }\n            handleDelete={ () => handleDelete( todo.id ) }\n            toggleChecked={ () => toogleChecked( todo.id )}\n          />\n        ) ) }\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}